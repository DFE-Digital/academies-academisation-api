name: Cypress Tests using Cypress Docker Image

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
    secrets:
      API_KEY:
        required: true
      URL:
        required: true
      SLACK_WEBHOOK_URL:
        required: true
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        required: true
        type: environment

concurrency:
  group: ${{ github.workflow }}

jobs:
  cypress-tests:
    name: Run Cypress tests
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    strategy:
      matrix:
        browser: [
          "edge"
        ]
    container:
      image: cypress/browsers:22.12.0
    defaults:
      run:
        working-directory: CypressTests
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Run
        uses: cypress-io/github-action@v6
        env:
          CYPRESS_apiKey: ${{ secrets.API_KEY }}
          CYPRESS_url: ${{ secrets.URL }}
        with:
          browser: ${{ matrix.browser }}
          working-directory: CypressTests

      - name: Upload artifacts
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
           name: screenshots-${{ inputs.environment }}-${{ matrix.browser }}
           path: CypressTests/cypress/screenshots

      - name: Generate report
        if: always()
        run: |
          mkdir mochareports
          npm run generate:html:report

      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ inputs.environment }}-${{ matrix.browser }}
          path: CypressTests/cypress/reports/mocha

      - name: Report results
        if: always()
        run: npm run cy:notify -- --custom-text="Environment ${{ inputs.environment }}, See more information https://github.com/DFE-Digital/academies-academisation-api/actions/runs/${{github.run_id}}"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
