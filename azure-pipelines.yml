# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  displayName: 'New manifest for tool'
  inputs:
    command: custom
    custom: 'new'
    arguments: tool-manifest

- task: DotNetCoreCLI@2
  displayName: 'Install EF Tool'
  inputs:
    command: custom
    custom: 'tool'
    arguments: install dotnet-ef

- task: DotNetCoreCLI@2
  displayName: 'Restore all project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build all projects'
  inputs:
    command: 'build'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Create SQL Scripts'
  inputs:
    command: custom
    custom: 'ef '
    arguments: migrations script --output $(Build.SourcesDirectory)/SQL/DbMigrationScript.sql --idempotent -p Dfe.Academies.Academisation.Data -s Dfe.Academies.Academisation.WebApi -c AcademisationContext

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: SQLScripts'
  inputs:
    PathtoPublish: $(Build.SourcesDirectory)/SQL/DbMigrationScript.sql
    ArtifactName: SQLScripts

- task: DotNetCoreCLI@2
  displayName: 'Publish web projects'
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--output $(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: Academies Academisation API'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'AcademiesAcademisationApiBuild'
    publishLocation: 'Container'
